{"ast":null,"code":"// Reduktor to funkcja, która wymaga stanu i akcji.\n// Wykonuje na tej podstawie obliczenia i zwraca nowy stan.\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { loadState } from \"./StateHandler\"; // W przeciństwie do Store - w naszej aplikacji moze istniec\n// wiele reduktorow.\n// 1. Stworzenie obiektu koszyka\n\nconst cartContent = [{\n  id: 1,\n  name: 'Laptop',\n  price: 5000,\n  amount: 1\n}, {\n  id: 2,\n  name: 'Keyboard',\n  price: 200,\n  amount: 2\n}]; // 2. Stworzenie plasterka stanu koszyka\n\nconst cartSlice = createSlice({\n  // 2.1. Nadanie nazwy plasterka\n  name: 'cart',\n  // 2.2. Nadanie stanu początkowego\n  initialState: {\n    // 2.3. Definiowanie pól w plasterku\n    cart: cartContent\n  },\n  // 3. Tworzymy reduktory do manipulowania danymi w obrębie\n  //    platerka cart\n  reducers: {\n    addProduct: (state, action) => {\n      // akcja ma pole \"payload\", które przechowuje przesłane dane\n      state.cart.push(action.payload);\n    },\n    changeAmount: (state, action) => {\n      state.cart = state.cart.map(product => product.id === action.payload.id ? { ...product,\n        amount: action.payload.amount\n      } : product);\n    }\n  },\n  preloadedState: loadState()\n}); //export const addProduct = cartSlice.actions.addProduct;\n\nexport const {\n  addProduct,\n  changeAmount\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","loadState","cartContent","id","name","price","amount","cartSlice","initialState","cart","reducers","addProduct","state","action","push","payload","changeAmount","map","product","preloadedState","actions","reducer"],"sources":["D:/Development/redux/src/redux/RootReducer.js"],"sourcesContent":["// Reduktor to funkcja, która wymaga stanu i akcji.\r\n// Wykonuje na tej podstawie obliczenia i zwraca nowy stan.\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { loadState } from \"./StateHandler\";\r\n\r\n// W przeciństwie do Store - w naszej aplikacji moze istniec\r\n// wiele reduktorow.\r\n\r\n// 1. Stworzenie obiektu koszyka\r\nconst cartContent = [\r\n    { id: 1, name: 'Laptop', price: 5000, amount: 1 },\r\n    { id: 2, name: 'Keyboard', price: 200, amount: 2 },\r\n];\r\n\r\n// 2. Stworzenie plasterka stanu koszyka\r\nconst cartSlice = createSlice({\r\n    // 2.1. Nadanie nazwy plasterka\r\n    name: 'cart',\r\n    // 2.2. Nadanie stanu początkowego\r\n    initialState: {\r\n        // 2.3. Definiowanie pól w plasterku\r\n        cart: cartContent\r\n    },\r\n    // 3. Tworzymy reduktory do manipulowania danymi w obrębie\r\n    //    platerka cart\r\n    reducers: {\r\n        addProduct: (state, action) => {\r\n            // akcja ma pole \"payload\", które przechowuje przesłane dane\r\n            state.cart.push(action.payload);\r\n        },\r\n        changeAmount: (state, action) => {\r\n            state.cart = state.cart.map((product) => \r\n                product.id === action.payload.id\r\n                ? { ...product, amount: action.payload.amount }\r\n                : product \r\n            )\r\n        }\r\n    },\r\n    preloadedState: loadState(),\r\n});\r\n\r\n//export const addProduct = cartSlice.actions.addProduct;\r\nexport const { addProduct, changeAmount } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CAEA;AACA;AAEA;;AACA,MAAMC,WAAW,GAAG,CAChB;EAAEC,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,QAAf;EAAyBC,KAAK,EAAE,IAAhC;EAAsCC,MAAM,EAAE;AAA9C,CADgB,EAEhB;EAAEH,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,UAAf;EAA2BC,KAAK,EAAE,GAAlC;EAAuCC,MAAM,EAAE;AAA/C,CAFgB,CAApB,C,CAKA;;AACA,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC1B;EACAI,IAAI,EAAE,MAFoB;EAG1B;EACAI,YAAY,EAAE;IACV;IACAC,IAAI,EAAEP;EAFI,CAJY;EAQ1B;EACA;EACAQ,QAAQ,EAAE;IACNC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3B;MACAD,KAAK,CAACH,IAAN,CAAWK,IAAX,CAAgBD,MAAM,CAACE,OAAvB;IACH,CAJK;IAKNC,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACH,IAAN,GAAaG,KAAK,CAACH,IAAN,CAAWQ,GAAX,CAAgBC,OAAD,IACxBA,OAAO,CAACf,EAAR,KAAeU,MAAM,CAACE,OAAP,CAAeZ,EAA9B,GACE,EAAE,GAAGe,OAAL;QAAcZ,MAAM,EAAEO,MAAM,CAACE,OAAP,CAAeT;MAArC,CADF,GAEEY,OAHO,CAAb;IAKH;EAXK,CAVgB;EAuB1BC,cAAc,EAAElB,SAAS;AAvBC,CAAD,CAA7B,C,CA0BA;;AACA,OAAO,MAAM;EAAEU,UAAF;EAAcK;AAAd,IAA+BT,SAAS,CAACa,OAA/C;AAEP,eAAeb,SAAS,CAACc,OAAzB"},"metadata":{},"sourceType":"module"}