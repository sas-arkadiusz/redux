{"ast":null,"code":"// Reduktor to funkcja, która wymaga stanu i akcji.\n// Wykonuje na tej podstawie obliczenia i zwraca nowy stan.\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { loadState } from \"./StorageHandler\";\nconst cartContent = [{\n  id: 1,\n  name: 'Laptop',\n  price: 5000,\n  amount: 1\n}, {\n  id: 2,\n  name: 'Keyboard',\n  price: 200,\n  amount: 2\n}];\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cart: cartContent //cart: loadState().cart.cart\n\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.cart.push(action.payload);\n    },\n    changeAmount: (state, action) => {\n      state.cart = state.cart.map(product => product.id === action.payload.id ? { ...product,\n        amount: action.payload.amount\n      } : product);\n    }\n  }\n});\nexport const {\n  addProduct,\n  changeAmount\n} = cartSlice.actions;\nexport default cartSlice.reducer;\n/*\r\n1. Dodaj możliwość usuwania produktów z koszyka.\r\n2. Dodaj możliwość dodawania do koszyka.\r\n    1. Należy sprawdzić, czy produkt jest już w koszyku.\r\n*/","map":{"version":3,"names":["createSlice","loadState","cartContent","id","name","price","amount","cartSlice","initialState","cart","reducers","addProduct","state","action","push","payload","changeAmount","map","product","actions","reducer"],"sources":["D:/Development/redux/src/redux/RootReducer.js"],"sourcesContent":["// Reduktor to funkcja, która wymaga stanu i akcji.\r\n// Wykonuje na tej podstawie obliczenia i zwraca nowy stan.\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { loadState } from \"./StorageHandler\";\r\n\r\nconst cartContent = [\r\n    { id: 1, name: 'Laptop', price: 5000, amount: 1 },\r\n    { id: 2, name: 'Keyboard', price: 200, amount: 2 },\r\n];\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cart: cartContent\r\n        //cart: loadState().cart.cart\r\n    },\r\n    reducers: {\r\n        addProduct: (state, action) => {\r\n            state.cart.push(action.payload);\r\n        },\r\n        changeAmount: (state, action) => {\r\n            state.cart = state.cart.map((product) => \r\n                product.id === action.payload.id\r\n                ? { ...product, amount: action.payload.amount }\r\n                : product \r\n            )\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addProduct, changeAmount } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n\r\n/*\r\n1. Dodaj możliwość usuwania produktów z koszyka.\r\n2. Dodaj możliwość dodawania do koszyka.\r\n    1. Należy sprawdzić, czy produkt jest już w koszyku.\r\n*/"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,WAAW,GAAG,CAChB;EAAEC,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,QAAf;EAAyBC,KAAK,EAAE,IAAhC;EAAsCC,MAAM,EAAE;AAA9C,CADgB,EAEhB;EAAEH,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,UAAf;EAA2BC,KAAK,EAAE,GAAlC;EAAuCC,MAAM,EAAE;AAA/C,CAFgB,CAApB;AAKA,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC1BI,IAAI,EAAE,MADoB;EAE1BI,YAAY,EAAE;IACVC,IAAI,EAAEP,WADI,CAEV;;EAFU,CAFY;EAM1BQ,QAAQ,EAAE;IACNC,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACH,IAAN,CAAWK,IAAX,CAAgBD,MAAM,CAACE,OAAvB;IACH,CAHK;IAINC,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACH,IAAN,GAAaG,KAAK,CAACH,IAAN,CAAWQ,GAAX,CAAgBC,OAAD,IACxBA,OAAO,CAACf,EAAR,KAAeU,MAAM,CAACE,OAAP,CAAeZ,EAA9B,GACE,EAAE,GAAGe,OAAL;QAAcZ,MAAM,EAAEO,MAAM,CAACE,OAAP,CAAeT;MAArC,CADF,GAEEY,OAHO,CAAb;IAKH;EAVK;AANgB,CAAD,CAA7B;AAoBA,OAAO,MAAM;EAAEP,UAAF;EAAcK;AAAd,IAA+BT,SAAS,CAACY,OAA/C;AAEP,eAAeZ,SAAS,CAACa,OAAzB;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}